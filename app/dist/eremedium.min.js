function initMenu(){$("#menu ul").hide(),$("#menu ul").children(".current").parent().show(),$("#menu li a").click(function(){var e=$(this).next();return e.is("ul")&&e.is(":visible")?!1:e.is("ul")&&!e.is(":visible")?($("#menu ul:visible").slideUp("normal"),e.slideDown("normal"),!1):void 0})}!function(){"use strict";angular.module("ERemediumWebApp",["ui.router","ui.bootstrap","ngResource","ngMessages","ngDialog","ngCookies","ngTouch","cgBusy","flow","ncy-angular-breadcrumb","angularResizable","ui.select","ui.calendar","ngSanitize","frapontillo.bootstrap-switch","ERemediumWebApp.config","ERemediumWebApp.routes","ERemediumWebApp.patients","ERemediumWebApp.reportinganalytics","ERemediumWebApp.doctor","ERemediumWebApp.login","ERemediumWebApp.prescriptions","ERemediumWebApp.tasks","ERemediumWebApp.utils","ERemediumWebApp.pharmacy","ERemediumWebApp.messages","ERemediumWebApp.labs","ERemediumWebApp.appointments"]).run(function(e,t,i){e.getFullName=function(e){return angular.isUndefined(e)?void 0:(void 0==e.midlleName&&(e.midlleName=""),e.firstName+" "+e.midlleName+" "+e.lastName)},e.getFullAddress=function(e){return angular.isUndefined(e)?void 0:e.address.addressLine1+", "+e.address.addressLine2+", "+e.address.city+", "+e.address.state+", "+e.address.pincode},e.getAge=function(e){var t=new Date,i=new Date(e),n=t.getFullYear()-i.getFullYear(),s=t.getMonth()-i.getMonth();return(0>s||0===s&&t.getDate()<i.getDate())&&n--,n},e.go=function(e){t.path(e)},e.getImageURL=function(e,t,i,n){var s={user:t,sessionId:i,imgIdOfUser:n};return e+"userservice/GetImage?"+$.param(s)},e.$on("$stateChangeSuccess",function(t,n,s,r,a){e.previousState=r;var o;(o=n&&n.params&&n.params.autoActivateChild)&&i.go(o)})}),$(".sidebar-nav a").on("click",function(){$(".sidebar-nav").find(".active").removeClass("active"),$(this).parent().addClass("active")}),angular.element(document).ready(function(e){e(window).scroll(function(){e(this).scrollTop()>=50?e("#return-to-top").fadeIn(200):e("#return-to-top").fadeOut(200)}),e("#return-to-top").click(function(){e("body,html").animate({scrollTop:0},500)}),e("#menu-toggle-2").click(function(){e("body,html").animate({scrollTop:0},500)})}),angular.module("ERemediumWebApp.config",[]),angular.module("ERemediumWebApp.routes",[])}(),function(){"use strict";angular.module("ERemediumWebApp.config").config(["$httpProvider",function(e){function t(e){return angular.isUndefined(e)?e:(angular.forEach(e,function(t,i){(i.startsWith("$")||"_id"===i)&&(delete e[i],console.log(i)),!angular.isUndefined(t)&&t.$cgBusyFulfilled&&delete t.$cgBusyFulfilled,!angular.isUndefined(t)&&t._id&&delete t._id}),e)}e.defaults.transformRequest.unshift(t),e.defaults.useXDomain=!0,delete e.defaults.headers.common["X-Requested-With"]}]).config(["$compileProvider",function(e){e.aHrefSanitizationWhitelist(/^\s*(https?|file|tel|ftp|mailto|javascript|chrome-extension):|data:application\//)}])}(),function(){"use strict";angular.module("ERemediumWebApp.appointments",["ERemediumWebApp.appointments.routes","ERemediumWebApp.appointments.controllers","ERemediumWebApp.appointments.services"]),angular.module("ERemediumWebApp.appointments.routes",["ui.router"]),angular.module("ERemediumWebApp.appointments.controllers",[]),angular.module("ERemediumWebApp.appointments.services",[])}(),function(){"use strict";angular.module("ERemediumWebApp.doctor",["ERemediumWebApp.doctor.routes","ERemediumWebApp.doctor.controllers","ERemediumWebApp.doctor.services"]),angular.module("ERemediumWebApp.doctor.routes",["ui.router"]),angular.module("ERemediumWebApp.doctor.controllers",[]),angular.module("ERemediumWebApp.doctor.services",[])}(),function(){"use strict";angular.module("ERemediumWebApp.labs",["ERemediumWebApp.labs.routes","ERemediumWebApp.labs.controllers","ERemediumWebApp.labs.services"]),angular.module("ERemediumWebApp.labs.routes",["ui.router"]),angular.module("ERemediumWebApp.labs.controllers",[]),angular.module("ERemediumWebApp.labs.services",[])}(),function(){"use strict";angular.module("ERemediumWebApp.messages",["ERemediumWebApp.messages.routes","ERemediumWebApp.messages.controllers","ERemediumWebApp.messages.services"]),angular.module("ERemediumWebApp.messages.routes",["ui.router"]),angular.module("ERemediumWebApp.messages.controllers",[]),angular.module("ERemediumWebApp.messages.services",[])}(),function(){"use strict";angular.module("ERemediumWebApp.patients",["ERemediumWebApp.patients.routes","ERemediumWebApp.patients.controllers","ERemediumWebApp.patients.services"]),angular.module("ERemediumWebApp.patients.routes",["ui.router"]),angular.module("ERemediumWebApp.patients.controllers",[]),angular.module("ERemediumWebApp.patients.services",[])}(),function(){"use strict";angular.module("ERemediumWebApp.pharmacy",["ERemediumWebApp.pharmacy.routes","ERemediumWebApp.pharmacy.controllers","ERemediumWebApp.pharmacy.services"]),angular.module("ERemediumWebApp.pharmacy.routes",["ui.router"]),angular.module("ERemediumWebApp.pharmacy.controllers",[]),angular.module("ERemediumWebApp.pharmacy.services",[])}(),function(){"use strict";angular.module("ERemediumWebApp.prescriptions",["ERemediumWebApp.prescriptions.routes","ERemediumWebApp.prescriptions.controllers","ERemediumWebApp.prescriptions.services","ERemediumWebApp.prescriptions.directives"]),angular.module("ERemediumWebApp.prescriptions.routes",["ui.router"]),angular.module("ERemediumWebApp.prescriptions.controllers",[]),angular.module("ERemediumWebApp.prescriptions.services",[]),angular.module("ERemediumWebApp.prescriptions.directives",[])}(),function(){"use strict";angular.module("ERemediumWebApp.reportinganalytics",["ERemediumWebApp.reportinganalytics.routes","ERemediumWebApp.reportinganalytics.controllers","ERemediumWebApp.reportinganalytics.services"]),angular.module("ERemediumWebApp.reportinganalytics.routes",["ui.router"]),angular.module("ERemediumWebApp.reportinganalytics.controllers",[]),angular.module("ERemediumWebApp.reportinganalytics.services",[])}(),function(){"use strict";angular.module("ERemediumWebApp.tasks",["ERemediumWebApp.tasks.routes","ERemediumWebApp.tasks.controllers","ERemediumWebApp.tasks.services"]),angular.module("ERemediumWebApp.tasks.routes",["ui.router"]),angular.module("ERemediumWebApp.tasks.controllers",[]),angular.module("ERemediumWebApp.tasks.services",[])}(),function(){"use strict";angular.module("ERemediumWebApp.utils",["ERemediumWebApp.utils.directives","ERemediumWebApp.utils.filters"]),angular.module("ERemediumWebApp.utils.directives",[]),angular.module("ERemediumWebApp.utils.filters",[])}(),function(){"use strict";angular.module("ERemediumWebApp.appointments.routes").config(["$stateProvider",function(e){e.state("Appointments",{url:"/book-appointment",templateUrl:"Appointments/partials/appointments.index.html",controller:"AppointmentsIndexCtrl",ncyBreadcrumb:{label:"Appointments",parent:"PatientsList"}}).state("PatientAppointments",{url:"/book-appointment/:patientId",templateUrl:"Appointments/partials/appointments.index.html",controller:"AppointmentsIndexCtrl",ncyBreadcrumb:{label:"Appointments",parent:"PatientsList"}})}])}(),function(){"use strict";angular.module("ERemediumWebApp.doctor.routes").config(["$stateProvider",function(e){e.state("Doctor",{url:"/doctor",templateUrl:"Doctor/partials/doctor.index.html",controller:"DoctorIndexCtrl",ncyBreadcrumb:{label:"Doctor Profile",parent:"PatientsList"}})}])}(),function(){"use strict";angular.module("ERemediumWebApp.labs.routes").config(["$stateProvider",function(e){e.state("Labs",{url:"/labs",templateUrl:"Labs/partials/labs.index.html",controller:"LabsIndexCtrl",ncyBreadcrumb:{label:"Labs & Imaging",parent:"PatientsList"}})}])}(),function(){"use strict";angular.module("ERemediumWebApp.messages.routes").config(["$stateProvider",function(e){e.state("Messages",{url:"/messages",templateUrl:"Messages/partials/messages.index.html",controller:"MessagesIndexCtrl",ncyBreadcrumb:{label:"Messages",parent:"PatientsList"}})}])}(),function(){"use strict";angular.module("ERemediumWebApp.patients.routes").config(["$stateProvider",function(e){e.state("PatientsList",{url:"/patients",templateUrl:"Patients/partials/patients.list.html",controller:"PatientsListCtrl",ncyBreadcrumb:{label:"Home"}}).state("PatientVerifyOTP",{url:"/patients/verifyotp/:patientId",templateUrl:"Patients/partials/patients.verify-otp.html",controller:"PatientsVerifyOTPCtrl"}).state("PatientNewOrEdit",{url:"/patients/edit/:patientId",views:{"":{templateUrl:"Patients/partials/patients.edit.html",controller:"PatientNewOrEditCtrl"},"vitals@PatientNewOrEdit":{templateUrl:"Patients/partials/patients.vitals.html",controller:"PatientsVitalsCtrl"},"clinicalNotes@PatientNewOrEdit":{templateUrl:"Patients/partials/patients.clinical-notes.html",controller:"PatientsClinicalNotesCtrl"},"documents@PatientNewOrEdit":{templateUrl:"Patients/partials/patients.documents.html",controller:"PatientsDocumentsCtrl"}},ncyBreadcrumb:{label:"Patient Profile",parent:"PatientsList"}})}])}(),function(){"use strict";angular.module("ERemediumWebApp.pharmacy.routes").config(["$stateProvider",function(e){e.state("Pharmacy",{url:"/pharmacy",templateUrl:"Pharmacy/partials/pharmacy.index.html",controller:"PharmacyIndexCtrl",ncyBreadcrumb:{label:"Pharmacy",parent:"PatientsList"}})}])}(),function(){"use strict";angular.module("ERemediumWebApp.prescriptions.routes").config(["$stateProvider",function(e){e.state("PrescriptionIndex",{url:"/patients/:patientId/prescriptions",templateUrl:"Prescriptions/partials/prescriptions.index.html",controller:"PrescriptionIndexCtrl",params:{autoActivateChild:"PrescriptionIndex.List"}}).state("PrescriptionIndex.List",{templateUrl:"Prescriptions/partials/prescriptions.list.html",controller:"PrescriptionListCtrl",ncyBreadcrumb:{label:"Prescriptions",parent:"PatientNewOrEdit"}}).state("PrescriptionIndex.Detail",{url:"/{prescriptionId:[0-9]*}",templateUrl:"Prescriptions/partials/prescriptions.detail.html",controller:"PrescriptionDetailCtrl",ncyBreadcrumb:{label:"View",parent:"PrescriptionIndex.List"}}).state("PrescriptionNewOrEdit",{url:"/patients/:patientId/prescriptions/new",templateUrl:"Prescriptions/partials/prescriptions.edit.html",controller:"PrescriptionNewOrEditCtrl",params:{prescriptionId:null},ncyBreadcrumb:{label:"New",parent:"PrescriptionIndex.List"}}).state("PrescriptionAddMedicines",{url:"/patients/:patientId/prescriptions/new/medicines",templateUrl:"Prescriptions/partials/prescriptions.edit-medicines.html",params:{prescription:null},controller:"PrescriptionEditMedicinesCtrl",ncyBreadcrumb:{label:"Add Medicines",parent:"PrescriptionNewOrEdit"}}).state("PrescriptionOrder",{url:"/patients/:patientId/prescriptions/order/:prescriptionId",templateUrl:"Prescriptions/partials/prescriptions.order.html",controller:"PrescriptionOrderCtrl",ncyBreadcrumb:{label:"Place Order",parent:"PatientNewOrEdit"}}).state("PrescriptionOrder.PatientNewOrEditAddress",{url:"/new-address",templateUrl:"Patients/partials/patients.edit-address.html",controller:"PatientNewOrEditAddressCtrl"}).state("PrescriptionOrderStatus",{url:"/patients/:patientId/prescriptions/order/status/:prescriptionId",templateUrl:"Prescriptions/partials/prescriptions.order-status.html",controller:"PrescriptionOrderStatusCtrl",ncyBreadcrumb:{label:"Order Status",parent:"PatientNewOrEdit"}})}])}(),function(){"use strict";angular.module("ERemediumWebApp.reportinganalytics.routes").config(["$stateProvider",function(e){e.state("ReportingAnalytics",{url:"/reportinganalytics",templateUrl:"ReportingAnalytics/partials/reportinganalytics.index.html",controller:"ReportingAnalyticsIndexCtrl",ncyBreadcrumb:{label:"Reporting & Analytics",parent:"PatientsList"}})}])}(),function(){"use strict";angular.module("ERemediumWebApp.tasks.routes").config(["$stateProvider",function(e){e.state("TasksList",{url:"/tasks",templateUrl:"Tasks/partials/tasks.list.html",controller:"TasksListCtrl",ncyBreadcrumb:{label:"Tasks",parent:"PatientsList"}})}])}(),function(){"use strict";function e(e,t,i,n,s,r){function a(){if(n.isAuthenticated()){var e=n.getAuthenticatedAccount();return void u(e.loggedInUser.ImageURL)}}function o(){function t(t){e.data=t,angular.isUndefined(e.data)||0==e.data.respCode?(e.showAlert=!0,e.alertMessage="Invalid Credentials, Please try again!"):(l(t),u())}e.data={};var i={mobile:e.mobileNumber,password:e.password,deviceKey:""};e.myPromise=n.login(i,t)}function c(){var t=new Date;return e.rememberMe?t.setDate(t.getDate()+7):t.setDate(t.getDate()+2),t}function l(i){e.myPromise=r.get({user:i.userId,sessionId:i.sessionId,isDoctor:!0,mobile:"",columnsToGet:"settings,userType,userId,firstName,midlleName,lastName,mobile,clinic"},function(e){i.loggedInUser=e,i.loggedInUser.ImageURL=t.getImageURL(i.baseURL,i.userId,i.sessionId,i.userId),n.setAuthenticatedAccount(i,c()),d(i.loggedInUser.ImageURL)})}function d(e){t.loggedInUserImageURL=e}function u(e){d(e),t.showMenu=!0,$("#loginModal").modal("hide"),$("#registerModal").modal("hide"),$("body").removeClass("modal-open"),$(".modal-backdrop").remove(),$("#wrapper").removeClass("hero-unit"),m(),p(),i.go("PatientsList")}function p(){e.messagesList=new Array,t.pendingMessagesCount=e.messagesList.length}function m(){e.taskList=new Array,t.pendingTasksCount=e.taskList.length}function g(){e.showAlert=!1,t.showMenu=!1,t.pageHeader="",e.rememberMe=!0,f(s.signIn)}function f(e){"true"==e||"logOut"==e?($("#loginModal").modal("show"),$("#registerModal").modal("hide")):($("#registerModal").modal("show"),$("#loginModal").modal("hide"))}"logOut"==s.signIn?n.logout():a(),g(),e.signIn=o,e.toggleModal=f}angular.module("ERemediumWebApp.login",["ui.router","ngMessages","ERemediumWebApp.login.services"]).config(["$stateProvider",function(e){e.state("login",{url:"/login/:signIn",templateUrl:"Login/partials/login.html",controller:"LoginCtrl"})}]).controller("LoginCtrl",e),angular.module("ERemediumWebApp.login.services",[]),e.$inject=["$scope","$rootScope","$state","Account","$stateParams","Patient"]}(),function(){"use strict";angular.module("ERemediumWebApp.login.services").factory("Login",["$resource",function(e){var t="",i={},n={validateCredentials:{method:"POST",url:"http://52.76.165.4/ERService/userservice/ValidateCredentials"}};return e(t,i,n)}]).factory("Account",["Login","$cookies","$rootScope",function(e,t,i){function n(t,i){return e.validateCredentials(t).$promise.then(function(e){if(1==e.respCode){delete e.response,delete e.respCode;var t=angular.forEach(e,function(t,i){i.startsWith("$")&&delete e[i]});t.baseURL="http://52.76.165.4/ERService/",o(t)}angular.isDefined(i)&&i(e)})}function s(){return r(),t.getObject("eremediumaccount")}function r(){i.showMenu=!0,$("#wrapper").removeClass("hero-unit")}function a(){return!!t.get("eremediumaccount")}function o(e,i){t.putObject("eremediumaccount",e,{expires:i})}function c(){t.remove("eremediumaccount")}return{login:n,logout:c,getAuthenticatedAccount:s,setAuthenticatedAccount:o,isAuthenticated:a}}])}(),$("#menu-toggle").click(function(e){e.preventDefault(),$("#wrapper").toggleClass("toggled")}),$("#menu-toggle-2").click(function(e){e.preventDefault(),$("#wrapper").toggleClass("toggled-2"),$("#menu ul").hide()}),$(document).ready(function(){initMenu()}),function(){"use strict";function e(e,t,i,n,s,r,a,o){function c(){n.pageHeader="Appointments",l(),d()}function l(){void 0!==r.patientId&&(e.myPromise=t.get({user:r.patientId,sessionId:e.account.sessionId,isDoctor:!1,mobile:"",columnsToGet:""},function(t){e.patient=t}))}function d(){e.myPromise=t.getProfile({user:e.account.userId,sessionId:e.account.sessionId,isDoctor:!0,mobile:"",columnsToGet:""},function(t){e.doctor=t})}return s.isAuthenticated()?(e.account=s.getAuthenticatedAccount(),e.patientId=r.patientId,c(),e.intervals=["15 minutes","30 minutes","45 minutes"],e.fillAppointment=function(t,i,n){if("agendaDay"==n.name){e.date=t,e.originalDate=t,e.dateFrom=t.format(),e.startTime=t.format("hh:mm T")+"M";a.open({template:"Appointments/partials/appointments.appointment-details-dialog.html",className:"ngdialog-theme-default",scope:e,showClose:!0,closeByEscape:!1,controller:function(e,i,n,s){s.getAuthenticatedAccount();e.selectStopTime=function(i){console.log(i),"15 minutes"==i?e.dateTo=e.originalDate.add(9e5).format():"30 minutes"==i?e.dateTo=t.add(18e5).format():"45 minutes"==i?e.dateTo=t.add(27e5).format():e.dateTo=t.add(9e5).format()},e.saveAppointment=function(){e.eventSources[0].events.push({title:e.patient.firstName+" "+e.patient.lastName,start:e.dateFrom,end:e.dateTo,stick:!0}),a.close()}}})}},e.alertOnDrop=function(){alert("alert on drop"),console.log("alert on drop")},e.alertOnResize=function(){alert("alert on resize")},e.eventOnClick=function(e){},e.eventSources=[{events:[{title:"Event1",start:"2016-04-04"},{title:"Event2",start:"2016-04-23"},{title:"Event33",start:"2016-04-30T03:30:00",end:"2016-04-30T04:30:00"}],color:"yellow",textColor:"black"}],void(e.uiConfig={calendar:{defaultView:"agendaDay",height:"100%",slotDuration:"00:15:00",defaultTimedEventDuration:"00:15:00",nowIndicator:!0,eventDurationEditable:!1,editable:!0,header:{left:"month agendaWeek agendaDay",center:"title",right:"today prev,next"},dayClick:e.fillAppointment,eventDrop:e.alertOnDrop,eventResize:e.alertOnResize,eventClick:e.eventOnClick}})):void i.go("Appointments",{signIn:!0})}angular.module("ERemediumWebApp.appointments.controllers").controller("AppointmentsIndexCtrl",e),e.$inject=["$scope","Appointments","$state","$rootScope","Account","$stateParams","ngDialog","uiCalendarConfig"]}(),function(){"use strict";angular.module("ERemediumWebApp.appointments.services").factory("Appointments",["$resource",function(e){var t="",i={},n={upsert:{method:"POST",url:"http://52.76.165.4/ERService/userservice/UpsertUser"},get:{method:"POST",url:"http://52.76.165.4/ERService/userservice/GetUserById",isArray:!1},getProfile:{method:"POST",url:"http://52.76.165.4/ERService/userservice/GetUserById",isArray:!1}};return e(t,i,n)}])}(),function(){"use strict";function e(e,t,i,n,s,r,a){function o(){e.showAlert=!1,n.pageHeader="Doctor Profile",c(!1),f()}function c(t){e.passwordSectionUpdate=t,e.summarySectionUpdate=t,e.clinicSectionUpdate=t,e.servicesSectionUpdate=t,e.professionalDetailsSectionUpdate=t}function l(){e.summarySectionUpdate=!0}function d(){e.summarySectionUpdate=!1}function u(){e.passwordSectionUpdate=!0}function p(){e.passwordSectionUpdate=!1}function m(n){var s={user:e.doctor.doctorId,newPassword:e.doctor.password};e.myPromise=t.changePassword(s,function(t){e.showAlert=!0,e.section=n,angular.isUndefined(t)?(e.alertMessage="Error in saving "+n+", Please try again!",e.alertClass="alert-danger"):1==t.respCode?(e.alertMessage=n+" Saved Successfully!",e.alertClass="alert-success",i.go("login",{signIn:!0})):(e.alertMessage=t.response,e.alertClass="alert-danger")})}function g(n){e.doctor.userType="doctor";var s={user:e.account.userId,sessionId:e.account.sessionId,doctorId:"",patientId:"",userMap:e.doctor};e.myPromise=t.saveProfile(s,function(t){e.showAlert=!0,e.section=n,angular.isUndefined(t)?(e.alertMessage="Error in saving "+n+", Please try again!",e.alertClass="alert-danger"):1==t.respCode?(e.alertMessage=n+" Saved Successfully!",e.alertClass="alert-success","Settings"==n&&i.go("login",{signIn:!0}),e.doctor=t.doctor,c(!1)):(e.alertMessage=t.response,e.alertClass="alert-danger")})}function f(){e.myPromise=t.getProfile({user:e.account.userId,sessionId:e.account.sessionId,isDoctor:!0,mobile:"",columnsToGet:"sex,clinic,modifiedBy,settings,specializations,education,password,medicalregnumber,userType,patientId,parentId,userId,age,midlleName,experience,firstName,searchCol,aboutme,lastName,services,status,relation,modifiedDate,creationDate,briefsummary,doctorId,memberships,mobile"},function(t){e.doctor=t,void 0==e.doctor.settings&&(e.doctor.settings={}),void 0==e.doctor.settings.canvasEnabled&&(e.doctor.settings.canvasEnabled=!0),void 0==e.doctor.settings.twoFactorAuthentication&&(e.doctor.settings.twoFactorAuthentication=!1)})}return s.isAuthenticated()?(e.account=s.getAuthenticatedAccount(),o(),e.upsertUser=g,e.changePassword=m,e.showSummarySection=l,e.closeSummarySection=d,e.showPasswordSection=u,e.closePasswordSection=p,e.uploader={},void(e.handleUpload=function(t,i,n){angular.forEach(n.files,function(t,i){var n=new FileReader;n.onload=function(t){var i=t.target.result;e.doctor.profileImageURL=i,g("Photo")},n.readAsDataURL(t.file)})})):void i.go("login",{signIn:!0})}angular.module("ERemediumWebApp.doctor.controllers").controller("DoctorIndexCtrl",e),e.$inject=["$scope","Doctor","$state","$rootScope","Account","$stateParams","ngDialog"]}(),function(){"use strict";angular.module("ERemediumWebApp.doctor.services").factory("Doctor",["$resource",function(e){var t="",i={},n={getProfile:{method:"POST",url:"http://52.76.165.4/ERService/userservice/GetUserById",isArray:!1},saveProfile:{method:"POST",url:"http://52.76.165.4/ERService/userservice/UpsertUser"},changePassword:{method:"POST",url:"http://52.76.165.4/ERService/userservice/SetPassword"}};return e(t,i,n)}])}(),function(){"use strict";function e(e,t,i,n,s,r){function a(){n.pageHeader="Lab & Imaging"}return s.isAuthenticated()?(e.account=s.getAuthenticatedAccount(),void a()):void i.go("login",{signIn:!0})}angular.module("ERemediumWebApp.labs.controllers").controller("LabsIndexCtrl",e),e.$inject=["$scope","Labs","$state","$rootScope","Account","$stateParams"]}(),function(){"use strict";angular.module("ERemediumWebApp.labs.services").factory("Labs",["$resource",function(e){var t="",i={},n={upsert:{method:"POST",url:"http://52.76.165.4/ERService/userservice/UpsertUser"}};return e(t,i,n)}])}(),function(){"use strict";function e(e,t,i,n,s,r,a){function o(){n.pageHeader="Messages",e.selectedChoice="allPatients",e.patient={},e.patient.selected=void 0}function c(){e.selectedChoice="partialAll"}function l(e,t){return e.map(function(e){return e[t]}).join(",")}function d(){var i={user:e.account.userId,sessionId:e.account.sessionId,to:"partialAll"==e.selectedChoice?l(e.patient.selected,"mobile"):"",toType:e.selectedChoice,msg:e.smsText,channel:"sms"};e.myPromise=t.sendSMS(i,function(t){e.showAlert=!0,angular.isUndefined(t)?(e.alertMessage="Error in sending Message, Please try again!",e.alertClass="alert-danger"):1==t.respCode?(e.alertMessage=t.response,e.alertClass="alert-success"):(e.alertMessage=t.response,e.alertClass="alert-danger")})}return s.isAuthenticated()?(e.account=s.getAuthenticatedAccount(),o(),e.sendSMS=d,e.focusSelectPatients=c,e.patientList=a.query({user:e.account.userId,sessionId:e.account.sessionId,doctorId:e.account.userId,limit:"",columnsToGet:"firstName,midlleName,lastName,mobile"},function(t){e.patientList=t}),void(e.myPromise=e.patientList.$promise)):void i.go("login",{signIn:!0})}angular.module("ERemediumWebApp.messages.controllers").controller("MessagesIndexCtrl",e),e.$inject=["$scope","Messages","$state","$rootScope","Account","$stateParams","Patient"]}(),function(){"use strict";angular.module("ERemediumWebApp.messages.services").factory("Messages",["$resource",function(e){var t="",i={},n={sendSMS:{method:"POST",url:"http://52.76.165.4/ERService/communicationservice/SendSMS"},getDeliveryReport:{method:"POST",url:"http://52.76.165.4/ERService/communicationservice/GetDeliveryReport",isArray:!0}};return e(t,i,n)}])}(),function(){"use strict";function e(e,t,i,n,s,r,a){function o(){e.sortType="",e.sortReverse=!1,u()}function c(t){e.clinicalNote={},e.clinicalNote.date=new Date,e.readOnly=!1;var i=r.open({template:"Patients/partials/patients.upsert-clinical-note.html",className:"ngdialog-theme-default custom-width-1",scope:e,showClose:!1,closeByEscape:!1,closeByDocument:!1,controller:"PatientUpsertClinicalNotesCtrl"});i.closePromise.then(function(t){"Add"!=t.value&&"View"!=t.value||(e.account.loggedInUser.settings.canvasEnabled&&(e.clinicalNote.img=e.saveImageFn()),d("ClinicalNote","userClinicalNote"))})}function l(i){t.getPeripheralDetailsById({user:e.account.userId,sessionId:e.account.sessionId,doctorId:e.account.userId,patientId:a.patientId,detailType:"userClinicalNote",did:i.did,columnsToGet:""},function(t){e.clinicalNote=t,e.readOnly=!0,r.open({template:"Patients/partials/patients.upsert-clinical-note.html",className:"ngdialog-theme-default custom-width-1",scope:e,showClose:!1,closeByEscape:!1,closeByDocument:!1,controller:"PatientUpsertClinicalNotesCtrl"})})}function d(i,n){if(angular.isUndefined(e.patient.patientId))return e.showAlert=!0,e.section=i,e.alertMessage="Please create Patient before saving "+i+"!",void(e.alertClass="alert-danger");var s={user:e.account.userId,sessionId:e.account.sessionId,doctorId:e.account.userId,patientId:e.patient.patientId,detailType:n,userDetail:e.clinicalNote};e.myPromise=t.upsertPeripheralDetails(s,function(t){e.showAlert=!0,e.section=i,angular.isUndefined(t)?(e.alertMessage="Error in saving Patient's "+i+", Please try again!",e.alertClass="alert-danger"):1==t.respCode?(e.alertMessage="Patient's "+i+" Saved Successfully!",e.alertClass="alert-success",u()):(e.alertMessage=t.response,e.alertClass="alert-danger")})}function u(){t.getPeripheralDetails({user:e.account.userId,sessionId:e.account.sessionId,doctorId:e.account.userId,patientId:a.patientId,detailType:"userClinicalNote",columnsToGet:"did,date"},function(t){e.clinicalNotesList=t})}return s.isAuthenticated()?(e.account=s.getAuthenticatedAccount(),o(),e.upsertClinicalNotes=c,e.openClinicalNote=l,void(e.setDirectiveFn=function(t){e.saveImageFn=t})):void i.go("login",{signIn:!0})}angular.module("ERemediumWebApp.patients.controllers").controller("PatientsClinicalNotesCtrl",e),e.$inject=["$scope","Patient","$state","$rootScope","Account","ngDialog","$stateParams"]}(),function(){"use strict";function e(e,t,i,n,s,r,a){function o(){e.sortType="",e.sortReverse=!1,u()}function c(t){e.document={},e.document.date=new Date,e.readOnly=!1;var i=r.open({template:"Patients/partials/patients.upsert-document.html",className:"ngdialog-theme-default custom-width-1",scope:e,showClose:!1,closeByEscape:!1,closeByDocument:!1,controller:"PatientUpsertDocumentsCtrl"});i.closePromise.then(function(e){"Add"!=e.value&&"View"!=e.value||d("Document","userDcoument")})}function l(i){t.getDocumentById({user:e.account.userId,sessionId:e.account.sessionId,doctorId:e.account.userId,patientId:a.patientId,detailType:"userDcoument",did:i.did,columnsToGet:""},function(t){e.document=t,e.readOnly=!0,r.open({template:"Patients/partials/patients.upsert-document.html",className:"ngdialog-theme-default custom-width-1",scope:e,showClose:!1,closeByEscape:!1,closeByDocument:!1,controller:"PatientUpsertDocumentsCtrl"})})}function d(i,n){if(angular.isUndefined(e.patient.patientId))return e.showAlert=!0,e.section=i,e.alertMessage="Please create Patient before saving "+i+"!",void(e.alertClass="alert-danger");var s={user:e.account.userId,sessionId:e.account.sessionId,doctorId:e.account.userId,patientId:e.patient.patientId,detailType:n,userDocument:e.document};e.myPromise=t.upsertDocument(s,function(t){e.showAlert=!0,e.section=i,angular.isUndefined(t)?(e.alertMessage="Error in saving Patient's "+i+", Please try again!",e.alertClass="alert-danger"):1==t.respCode?(e.alertMessage="Patient's "+i+" Saved Successfully!",e.alertClass="alert-success",u()):(e.alertMessage=t.response,e.alertClass="alert-danger")})}function u(){t.getDocuments({user:e.account.userId,sessionId:e.account.sessionId,doctorId:e.account.userId,patientId:a.patientId,detailType:"userDcoument",columnsToGet:"did,date,documentName,tag"},function(t){e.documentsList=t})}return s.isAuthenticated()?(e.account=s.getAuthenticatedAccount(),o(),e.upsertDocuments=c,e.openDocument=l,void(e.uploader={})):void i.go("login",{signIn:!0})}angular.module("ERemediumWebApp.patients.controllers").controller("PatientsDocumentsCtrl",e),e.$inject=["$scope","Patient","$state","$rootScope","Account","ngDialog","$stateParams"]}(),function(){"use strict";function e(e,t,i,n,s){function r(){e.$parent.order.address=e.address,e.$parent.addresses.push(e.address),e.address={},n.go("PrescriptionOrder",null,{reload:!1})}e.address={},e.save=r}angular.module("ERemediumWebApp.patients.controllers").controller("PatientNewOrEditAddressCtrl",e),e.$inject=["$scope","$stateParams","Patient","$state","$rootScope"]}(),function(){"use strict";function e(e,t,i,n,s,r,a){function o(){e.showAlert=!1,e.genders=["Male","Female"],e.relationshiptypes=["None","Daughter","Son","Wife","Father","Mother","Grand Father","Grand Mother","Brother","Sister","Others"],s.pageHeader="Patient Profile",e.bloodgroups=["None","A+","A-","A Unknown","B+","B-","B Unknown","AB+","AB-","AB Unknown","O+","O-","O Unknown"],""==t.patientId?(e.patient={},e.patient.history={},e.patient.alergy={},e.patient.address={},e.patient.age={},e.patient.isUpdate=!1,e.patient.sex="Male",e.patient.relation="None",e.patient.bloodgroup="None",e.patient.hasFullAccess=!0,e.patient.password="",e.patient.parentId="",e.patient.dependants=[],e.patient.status="WaitingOTP",c(!0)):(m(),c(!1))}function c(t){e.identifyingDetailsSectionUpdate=t,e.historySectionUpdate=t,e.allergiesSectionUpdate=t}function l(t){e.patient.userType="patient",e.patient.isDependant="None"==e.patient.relation?"false":"true",e.patient.isUpdate=!0,void 0==e.patient.age&&(e.patient.age={}),e.patient.age.year=s.getAge(e.patient.dob),p(t)}function d(t,n){if(angular.isUndefined(e.patient.patientId))return e.showAlert=!0,e.section=t,e.alertMessage="Please create Patient before saving "+t+"!",void(e.alertClass="alert-danger");var s={user:P.userId,sessionId:P.sessionId,doctorId:P.userId,patientId:e.patient.patientId,detailType:n,userDetail:"userHistory"==n?e.patient.history:e.patient.alergy};e.myPromise=i.upsertPeripheralDetails(s,function(i){e.showAlert=!0,e.section=t,angular.isUndefined(i)?(e.alertMessage="Error in saving Patient's "+t+", Please try again!",e.alertClass="alert-danger"):1==i.respCode?(e.alertMessage="Patient's "+t+" Saved Successfully!",e.alertClass="alert-success",c(!1)):(e.alertMessage=i.response,e.alertClass="alert-danger")})}function u(t){return angular.isUndefined(e.patient.patientId)?(e.showAlert=!0,e.section=t,e.alertMessage="Please create Patient before saving "+t+"!",void(e.alertClass="alert-danger")):void p(t)}function p(t){var n={user:P.userId,sessionId:P.sessionId,doctorId:P.userId,patientId:e.patient.patientId,userMap:e.patient};e.myPromise=i.upsert(n,function(i){e.showAlert=!0,e.section=t,angular.isUndefined(i)?(e.alertMessage="Error in saving Patient's "+t+", Please try again!",e.alertClass="alert-danger",e.patient.isUpdate=!1):1==i.respCode?(e.alertMessage="Patient's "+t+" Saved Successfully!",e.alertClass="alert-success",e.patient=i.patient,e.patient.dob&&(e.patient.dob=new Date(e.patient.dob)),c(!1)):(e.alertMessage=i.response,e.alertClass="alert-danger",e.patient.isUpdate=!1)})}function m(){e.myPromise=i.get({user:t.patientId,sessionId:P.sessionId,isDoctor:!1,mobile:"",columnsToGet:"sex,modifiedBy,userType,patientId,parentId,hasFullAccess,dependants,bloodgroup,age,userId,midlleName,firstName,isUpdate,searchCol,lastName,status,relation,modifiedDate,creationDate,createdBy,landlineNumber,address,email,dob,isDependant,mobile,alternateMobileNumber"},function(t){e.patient=t,e.imageURL=s.getImageURL(P.baseURL,P.userId,P.sessionId,e.patient.patientId),e.patient.dob=new Date(e.patient.dob),g(),f()})}function g(){i.getPeripheralDetails({user:P.userId,sessionId:P.sessionId,doctorId:P.userId,patientId:t.patientId,detailType:"userHistory",columnsToGet:""},function(t){e.patient.history=t[0]})}function f(){i.getPeripheralDetails({user:P.userId,sessionId:P.sessionId,doctorId:P.userId,patientId:t.patientId,detailType:"userAllergy",columnsToGet:""},function(t){e.patient.alergy=t[0]})}function h(){n.go("PrescriptionIndex",{patientId:t.patientId})}function v(){n.go("PatientAppointments",{patientId:t.patientId})}function I(){n.go("PatientVerifyOTP",{patientId:t.patientId})}if(!r.isAuthenticated())return void n.go("login",{signIn:!0});var P=r.getAuthenticatedAccount();e.account=P,o(),e.savePatientProfile=l,e.savePatientPeripheralDetails=d,
e.openPrescriptions=h,e.getAllPrescriptionsAccess=I,e.bookAppointment=v,e.uploader={},e.handleUpload=function(t,i,n){angular.forEach(n.files,function(t,i){var n=new FileReader;n.onload=function(t){var i=t.target.result;e.patient.profileImageURL=i,u("Photo")},n.readAsDataURL(t.file)})}}angular.module("ERemediumWebApp.patients.controllers").controller("PatientNewOrEditCtrl",e),e.$inject=["$scope","$stateParams","Patient","$state","$rootScope","Account","ngDialog"]}(),function(){"use strict";function e(e,t,i,n,s,r){function a(){e.showAlert=!1,n.pageHeader="Patients",e.patient={},e.patient.search="",$(".modal-backdrop").remove(),o()}function o(){e.patientList=t.query({user:e.account.userId,sessionId:e.account.sessionId,doctorId:e.account.userId,limit:50,columnsToGet:"firstName,midlleName,lastName,sex,age,mobile,email,patientId"},function(t){e.patientList=t}),e.myPromise=e.patientList.$promise}function c(){i.go("PatientNewOrEdit")}function l(){e.searchPatientResults=t.search({user:e.account.userId,sessionId:e.account.sessionId,doctorId:e.account.userId,searchText:e.patient.search,limit:50,columnsToGet:"firstName,midlleName,lastName,sex,age,mobile,email,patientId"},function(t){angular.isUndefined(t)||""==t?(e.showAlert=!0,e.alertMessage="No Patient found with details: "+e.patient.search+"!"):(e.showAlert=!1,e.patientList=t)}),e.myPromise=e.searchPatientResults.$promise}function d(e){i.go("PatientNewOrEdit",{patientId:e.patientId})}return s.isAuthenticated()?(e.account=s.getAuthenticatedAccount(),a(),e.search=l,e.createPatientProfile=c,e.openPatientProfile=d,void(e.getPatientList=o)):void i.go("login",{signIn:!0})}angular.module("ERemediumWebApp.patients.controllers").controller("PatientsListCtrl",e),e.$inject=["$scope","Patient","$state","$rootScope","Account","$stateParams"]}(),function(){"use strict";function e(e,t,i,n,s,r){function a(){e.canvasEnabled=o.loggedInUser.settings.canvasEnabled,e.clinicalNote=e.$parent.clinicalNote,e.directiveFn=e.$parent.directiveFn,e.saveBtnName=e.readOnly?"View":"Add"}if(!s.isAuthenticated())return void i.go("login",{signIn:!0});var o=s.getAuthenticatedAccount();a()}angular.module("ERemediumWebApp.patients.controllers").controller("PatientUpsertClinicalNotesCtrl",e),e.$inject=["$scope","$stateParams","$state","Patient","Account","$rootScope"]}(),function(){"use strict";function e(e,t,i,n,s){function r(){e.document=e.$parent.document,e.saveBtnName=e.readOnly?"View":"Add"}if(!s.isAuthenticated())return void i.go("login",{signIn:!0});s.getAuthenticatedAccount();r(),e.uploader={},e.handleUpload=function(t,i,n){angular.forEach(n.files,function(t,i){var n=new FileReader;n.onload=function(t){var i=t.target.result;e.document.img=i},e.document.documentName=t.name,n.readAsDataURL(t.file)})}}angular.module("ERemediumWebApp.patients.controllers").controller("PatientUpsertDocumentsCtrl",e),e.$inject=["$scope","$stateParams","$state","Patient","Account"]}(),function(){"use strict";function e(e,t,i,n,s,r,a){function o(){e.vital=e.$parent.vital,e.saveBtnName=_.isEmpty(e.vital)?"Add":"Update"}if(!r.isAuthenticated())return void n.go("login",{signIn:!0});r.getAuthenticatedAccount();o()}angular.module("ERemediumWebApp.patients.controllers").controller("PatientUpsertVitalCtrl",e),e.$inject=["$scope","$stateParams","Patient","$state","$rootScope","Account","ngDialog"]}(),function(){"use strict";function e(e,t,i,n,s,r){function a(){n.pageHeader="",$("#verifyOTPModal").modal("show"),o()}function o(){e.myPromise=t.get({user:r.patientId,sessionId:e.account.sessionId,isDoctor:!1,mobile:"",columnsToGet:""},function(t){e.patient=t,c()})}function c(){var i={user:e.account.userId,sessionId:e.account.sessionId,otpType:"all",toType:"patient",toId:r.patientId,channel:"sms"};e.myPromise=t.generateOTP(i,function(t){angular.isUndefined(t)?(e.alertMessage="Error in generating OTP, Please refresh the page!",e.showAlert=!0):1==t.respCode?(e.showAlert=!1,e.alertMessage=t.response+" with Reference Number: "+t.refNumber+". Please enter received OTP to proceed."):(e.alertMessage=t.response,e.showAlert=!0)})}function l(){var n={user:e.account.userId,sessionId:e.account.sessionId,otp:e.otp,otpType:"all",patientId:r.patientId,doctorId:e.account.userId};e.myPromise=t.verifyOTP(n,function(t){angular.isUndefined(t)?(e.alertMessage="Error in verifying OTP, Please try again!",e.showAlert=!0):1==t.respCode?(u(),i.go("PatientNewOrEdit",{patientId:r.patientId},{reload:!0})):(e.alertMessage=t.response+". Please enter correct OTP.",e.showAlert=!0)})}function d(){u(),i.go("PatientNewOrEdit",{patientId:r.patientId},{reload:!0})}function u(){$("#verifyOTPModal").modal("hide"),$("body").removeClass("modal-open"),$(".modal-backdrop").remove()}return s.isAuthenticated()?(e.account=s.getAuthenticatedAccount(),a(),e.verifyOTP=l,e.close=d,void(e.generateOTP=c)):void i.go("login",{signIn:!0})}angular.module("ERemediumWebApp.patients.controllers").controller("PatientsVerifyOTPCtrl",e),e.$inject=["$scope","Patient","$state","$rootScope","Account","$stateParams"]}(),function(){"use strict";function e(e,t,i,n,s,r,a){function o(){e.sortType="",e.sortReverse=!1,d()}function c(t){e.vital=_.isUndefined(t)?{}:_.clone(e.vitalList[t]),e.vital.dateTime=new Date;var i=r.open({template:"Patients/partials/patients.upsert-vital.html",className:"ngdialog-theme-default custom-width-1",scope:e,showClose:!1,closeByEscape:!1,closeByDocument:!1,controller:"PatientUpsertVitalCtrl"});i.closePromise.then(function(e){"Add"!=e.value&&"Update"!=e.value||l("Vitals","userVitals")})}function l(i,n){if(angular.isUndefined(e.patient.patientId))return e.showAlert=!0,e.section=i,e.alertMessage="Please create Patient before saving "+i+"!",void(e.alertClass="alert-danger");var s={user:e.account.userId,sessionId:e.account.sessionId,doctorId:e.account.userId,patientId:e.patient.patientId,detailType:n,userDetail:e.vital};delete e.patient._id,e.myPromise=t.upsertPeripheralDetails(s,function(t){e.showAlert=!0,e.section=i,angular.isUndefined(t)?(e.alertMessage="Error in saving Patient's "+i+", Please try again!",e.alertClass="alert-danger"):1==t.respCode?(e.alertMessage="Patient's "+i+" Saved Successfully!",e.alertClass="alert-success",d()):(e.alertMessage=t.response,e.alertClass="alert-danger")})}function d(){t.getPeripheralDetails({user:e.account.userId,sessionId:e.account.sessionId,doctorId:e.account.userId,patientId:a.patientId,detailType:"userVitals",columnsToGet:""},function(t){e.vitalList=t})}return s.isAuthenticated()?(e.account=s.getAuthenticatedAccount(),o(),void(e.upsertVitals=c)):void i.go("login",{signIn:!0})}angular.module("ERemediumWebApp.patients.controllers").controller("PatientsVitalsCtrl",e),e.$inject=["$scope","Patient","$state","$rootScope","Account","ngDialog","$stateParams"]}(),function(){"use strict";angular.module("ERemediumWebApp.patients.services").factory("Patient",["$resource",function(e){var t="",i={},n={upsert:{method:"POST",url:"http://52.76.165.4/ERService/userservice/UpsertUser"},upsertPeripheralDetails:{method:"POST",url:"http://52.76.165.4/ERService/userservice/InsertUserHistory"},search:{method:"POST",url:"http://52.76.165.4/ERService/userservice/SearchUser",isArray:!0},get:{method:"POST",url:"http://52.76.165.4/ERService/userservice/GetUserById",isArray:!1},query:{method:"POST",url:"http://52.76.165.4/ERService/userservice/GetUsersForDoctor",isArray:!0},getPeripheralDetails:{method:"POST",url:"http://52.76.165.4/ERService/userservice/GetUserHistory",isArray:!0},getPeripheralDetailsById:{method:"POST",url:"http://52.76.165.4/ERService/userservice/GetUserHistoryById",isArray:!1},getDocuments:{method:"POST",url:"http://52.76.165.4/ERService/userservice/GetUserDocument",isArray:!0},upsertDocument:{method:"POST",url:"http://52.76.165.4/ERService/userservice/InsertUserDocument"},getDocumentById:{method:"POST",url:"http://52.76.165.4/ERService/userservice/GetUserDocumentById",isArray:!1},generateOTP:{method:"POST",url:"http://52.76.165.4/ERService/communicationservice/GenerateOTP",isArray:!1},verifyOTP:{method:"POST",url:"http://52.76.165.4/ERService/communicationservice/VerifyOTP",isArray:!1}};return e(t,i,n)}])}(),function(){"use strict";function e(e,t,i,n,s,r){function a(){n.pageHeader="Pharmacy"}return s.isAuthenticated()?(e.account=s.getAuthenticatedAccount(),void a()):void i.go("login",{signIn:!0})}angular.module("ERemediumWebApp.pharmacy.controllers").controller("PharmacyIndexCtrl",e),e.$inject=["$scope","Pharmacy","$state","$rootScope","Account","$stateParams"]}(),function(){"use strict";angular.module("ERemediumWebApp.pharmacy.services").factory("Pharmacy",["$resource",function(e){var t="",i={},n={upsert:{method:"POST",url:"http://52.76.165.4/ERService/userservice/UpsertUser"}};return e(t,i,n)}])}(),function(){"use strict";function e(e,t,i,n,s,r,a){function o(){e.canvasEnabled=p.loggedInUser.settings.canvasEnabled,e.$parent.detailView=t.prescriptionId,e.patient={},c(),l(),d(),u()}function c(){var n={user:p.loggedInUser.mobile,sessionId:p.sessionId,pid:t.prescriptionId,columnsToGet:""};e.prescription=i.get(n),e.myPromise=e.prescription.$promise}function l(){a.getPeripheralDetails({user:p.userId,sessionId:p.sessionId,doctorId:p.userId,patientId:t.patientId,detailType:"userVitals",columnsToGet:""},function(t){e.patient.vital=t[0]})}function d(){a.getPeripheralDetails({user:p.userId,sessionId:p.sessionId,doctorId:p.userId,patientId:t.patientId,detailType:"userHistory",columnsToGet:""},function(t){e.patient.history=t[0]})}function u(){a.getPeripheralDetails({user:p.userId,sessionId:p.sessionId,doctorId:p.userId,patientId:t.patientId,detailType:"userAllergy",columnsToGet:""},function(t){e.patient.alergy=t[0]})}if(!n.isAuthenticated())return void s.go("login",{signIn:!0});var p=n.getAuthenticatedAccount();o()}angular.module("ERemediumWebApp.prescriptions.controllers").controller("PrescriptionDetailCtrl",e),e.$inject=["$scope","$stateParams","Prescription","Account","$state","$rootScope","Patient"]}(),function(){"use strict";function e(e,t,i,n,s,r,a){function o(){e.templates={},e.patient={},d(),u(),p()}function c(){var n={user:m.userId,sessionId:m.sessionId,prescription:e.prescription};["medcines","advises"].forEach(function(t){var i=e.prescription[t].length;(_.isEmpty(e.prescription[t][i-1])||1==Object.keys(e.prescription[t][i-1]).length)&&e.prescription[t].pop()}),e.myPromise=t.upsert(n,function(e){_.isEqual(e.respCode,1)?r.go("PrescriptionIndex.Detail",{prescriptionId:e.pid,patientId:i.patientId}):console.log(e)})}function l(){s.open({template:"Prescriptions/partials/prescriptions.template-name-dialog.html",className:"ngdialog-theme-default",scope:e,showClose:!0,closeByEscape:!1,closeByDocument:!1,controller:function(e,t,i,n){function s(){var n={user:a.userId,sessionId:a.sessionId,isTemplate:"true",templateName:e.template_name,prescription:e.prescription};["medcines","advises"].forEach(function(t){var i=e.prescription[t].length;(_.isEmpty(e.prescription[t][i-1])||1==Object.keys(e.prescription[t][i-1]).length)&&e.prescription[t].pop()}),e.myPromise=i.upsert(n,function(i){_.isEqual(i.respCode,1)?(e.closeThisDialog({state:"saved",data:i.pid}),r.go("PrescriptionIndex.Detail",{prescriptionId:i.pid,patientId:t.patientId})):console.log(i)})}var a=n.getAuthenticatedAccount();e.saveAsTemplate=s}})}function d(){a.getPeripheralDetails({user:m.userId,sessionId:m.sessionId,doctorId:m.userId,patientId:i.patientId,detailType:"userVitals",columnsToGet:""},function(t){e.patient.vital=t[0]})}function u(){a.getPeripheralDetails({user:m.userId,sessionId:m.sessionId,doctorId:m.userId,patientId:i.patientId,detailType:"userHistory",columnsToGet:""},function(t){e.patient.history=t[0]})}function p(){a.getPeripheralDetails({user:m.userId,sessionId:m.sessionId,doctorId:m.userId,patientId:i.patientId,detailType:"userAllergy",columnsToGet:""},function(t){e.patient.alergy=t[0]})}if(e.prescription=i.prescription,!n.isAuthenticated())return void r.go("login",{signIn:!0});var m=n.getAuthenticatedAccount();o(),e.save=c,e.templateNameDialog=l;var g={user:m.loggedInUser.mobile,sessionId:m.sessionId,doctorId:m.userId,columnsToGet:"",limit:1e3};e.templateList=t.getTemplates(g,function(t){for(var i=0;i<e.templateList.length;i++)i%2==0&&(e.templateList[i].favourite=!0)}),e.getTemplateName=function(e){return e.templateName},e.templateAdded=function(t){["medcines","advises"].forEach(function(i){var n=e.prescription[i].length,s=0;for(s=0;s<t[i].length;s++)e.prescription[i][n-1+s]=t[i][s];t[i].length>0&&e.prescription[i].push({})})},e.firstLetterGroupFn=function(e){},e.templateRemoved=function(t){["medcines","advises"].forEach(function(i){var n,s;for(n=0;n<t[i].length;n++)for(s=0;s<e.prescription[i].length;s++)t[i][n]==e.prescription[i][s]&&e.prescription[i].splice(s,1)})}}angular.module("ERemediumWebApp.prescriptions.controllers").controller("PrescriptionEditMedicinesCtrl",e),e.$inject=["$scope","Prescription","$stateParams","Account","ngDialog","$state","Patient"]}(),function(){"use strict";function e(e,t,i,n,s,r,a){function o(e,i){if(_.isUndefined(e))if(t.prescription.images[t.canvasIdx].src=t.saveImageFn(),t.canvasIdx++,t.prescription.images.push({}),_.isUndefined(i))t.loadImageFn(t.prescription.images[t.canvasIdx].src);else{var n=new Image;n.src="img/ophthalmology.png",n.onload=function(){t.loadImageFn(n.src)}}else{if(0>e||e>t.prescription.images.length-1)return;t.prescription.images[t.canvasIdx].src=t.saveImageFn(),t.canvasIdx=e,t.loadImageFn(t.prescription.images[t.canvasIdx].src)}}function c(){t.prescription.patientId=P,t.prescription.doctorId=A.userId,t.prescription.isUpdate=!1,t.prescription.medcines=[],t.prescription.advises=[],t.prescription.images=[{}],l();var e=new Date;console.log(e),e.setDate(e.getDate()+7),t.prescription.nextVisit={},t.prescription.nextVisit.date=e,console.log(t.prescription.nextVisit.date)}function l(){["medcines","advises"].forEach(function(e){var i=t.prescription[e].length;(0==i||!_.isEmpty(t.prescription[e][i-1])&&1!==Object.keys(t.prescription[e][i-1]).length)&&t.prescription[e].push({})})}function d(){var e={user:A.loggedInUser.mobile,sessionId:A.sessionId,prescription:t.prescription};["medcines","advises"].forEach(function(e){var i=t.prescription[e].length;(_.isEmpty(t.prescription[e][i-1])||1==Object.keys(t.prescription[e][i-1]).length)&&t.prescription[e].pop()}),t.myPromise=i.upsert(e,function(e){_.isEqual(e.respCode,1)?t.closeThisDialog({state:"saved",data:e.pid}):console.log(e)})}function u(){r.open({template:"Prescriptions/partials/prescriptions.template-name-dialog.html",className:"ngdialog-theme-default",scope:t,showClose:!0,closeByEscape:!1,closeByDocument:!1,controller:"PrescriptionNewOrEditCtrl"})}function p(){var e={user:A.loggedInUser.mobile,sessionId:A.sessionId,isTemplate:"true",templateName:t.templatename,prescription:t.prescription};["medcines","advises"].forEach(function(e){var i=t.prescription[e].length;(_.isEmpty(t.prescription[e][i-1])||1==Object.keys(t.prescription[e][i-1]).length)&&t.prescription[e].pop()}),t.myPromise=i.upsert(e,function(e){_.isEqual(e.respCode,1)?t.closeThisDialog({state:"saved",data:e.pid}):console.log(e)})}function m(e,i){var n,s;t.itemStr=n=e,t.itemsStr=s=e+"s",t[n]={},t.editMode=!_.isUndefined(i),t.editMode&&angular.copy(t.prescription[s][i],t[n]);var a=r.open({template:"Prescriptions/partials/prescriptions.upsert-"+n+".html",className:"ngdialog-theme-default custom-width-2",scope:t,showClose:!1,closeByEscape:!1,closeByDocument:!1,controller:"PrescriptionUpsertItemCtrl"});a.closePromise.then(function(e){"Add"==e.value?t.prescription[s].push(t[n]):"Update"==e.value&&(t.prescription[s][i]=t[n])})}function g(){t.closeThisDialog({state:"minimized"})}function f(){t.closeThisDialog({state:"closed"})}function h(){t.canvasEditable=!1}function v(){t.canvasEnabled&&(t.prescription.images[t.canvasIdx].src=t.saveImageFn()),a.go("PrescriptionAddMedicines",{patientId:n.patientId,prescription:t.prescription})}function I(e){var n={user:A.loggedInUser.mobile,sessionId:A.sessionId,doctorId:A.userId,searchText:e,limit:5,columnsToGet:""};return t.myPromise=i.searchMed(n).$promise,i.searchMed(n).$promise}e.pageHeader="Create Prescription";var P=n.patientId;if(!s.isAuthenticated())return void a.go("login",{signIn:!0});var A=s.getAuthenticatedAccount();t.setDirectiveFn=function(i,n){t.saveImageFn=i,t.loadImageFn=n,e.$emit("willInitialised")},e.$on("$stateChangeStart",function(t,i,n,s,r){e.previousState=s,"PrescriptionAddMedicines"==s.name&&"PrescriptionNewOrEdit"==i.name&&(n.prescription={},n.prescription=r.prescription)}),t.canvasEnabled=A.loggedInUser.settings.canvasEnabled,t.canvasIdx=0;var y=n.prescriptionId;if(_.isEmpty(y))n.prescription?t.prescription=n.prescription:(t.prescription=new i,c());else{var b={user:A.loggedInUser.mobile,sessionId:A.sessionId,pid:y,columnsToGet:""};t.prescription=i.get(b),t.prescription.$promise.then(function(e){delete t.prescription.pid,delete t.prescription._id,t.canvasEnabled&&t.loadImageFn&&!_.isUndefined(t.canvasIdx)&&t.prescription.images.length>t.canvasIdx&&t.loadImageFn(t.prescription.images[t.canvasIdx].src),l()})}t.range=function(e,t,i){i=i||1;for(var n=[],s=e;t>=s;s+=i)n.push(s);return n},t.dialogTitle="New Prescription",t.loadCanvas=o,e.$on("willInitialised",function(){t.prescription.images&&t.canvasEnabled&&t.loadImageFn&&!_.isUndefined(t.canvasIdx)&&t.prescription.images.length>t.canvasIdx&&t.loadImageFn(t.prescription.images[t.canvasIdx].src)}),t.save=d,t.close=f,t.minimize=g,t.addMedicines=v,t.saveAsTemplate=p,t.templateNameDialog=u,t.search=I,t.upsertItem=m,t.closeCanvas=h}angular.module("ERemediumWebApp.prescriptions.controllers").controller("PrescriptionNewOrEditCtrl",e),e.$inject=["$rootScope","$scope","Prescription","$stateParams","Account","ngDialog","$state"]}(),function(){"use strict";function e(e,t,i,n,s,r,a){function o(){e.prescription.patientId=d,e.prescription.doctorId=u.userId,e.prescription.isUpdate=!1,e.prescription.medcines=[],e.prescription.advises=[];var t=new Date;t.setDate(t.getDate()+7),e.prescription.nextVisit={},e.prescription.nextVisit.date=moment(t).format("DD/MM/YYYY hh:mm A")}function c(){i.go("PrescriptionNewOrEdit",{patientId:r.patientId})}function l(e){i.go("PrescriptionNewOrEdit",{patientId:r.patientId,prescriptionId:e})}t.pageHeader="Prescriptions";var d=r.patientId,u=a.getAuthenticatedAccount();e.prescription=new s,o(),e.prescriptions=[],e.create=c,e.clone=l,e.minimized=!1}angular.module("ERemediumWebApp.prescriptions.controllers").controller("PrescriptionIndexCtrl",e),e.$inject=["$scope","$rootScope","$state","ngDialog","Prescription","$stateParams","Account"]}(),function(){"use strict";function e(e,t,i,n){function s(){var t=e.type+"s";e.prescription[t].push({})}function r(i){if(void 0==i||""==i){var n={user:o.loggedInUser.mobile,sessionId:o.sessionId,doctorId:o.userId,limit:5,columnsToGet:""};return e.myPromise=t.getFavouriteMed(n).$promise,t.getFavouriteMed(n).$promise}var n={user:o.loggedInUser.mobile,sessionId:o.sessionId,doctorId:o.userId,searchText:i,limit:5,columnsToGet:""};return e.myPromise=t.searchMed(n).$promise,t.searchMed(n).$promise}function a(t){var i=e.type+"s";e.prescription[i].splice(t,1)}if(!i.isAuthenticated())return void n.go("login",{signIn:!0});var o=i.getAuthenticatedAccount();e.dispenseUnits=["Tablet","Bottle","Injection"],e.dosageUnits=["tablet","ml","mg"],e.instructions=["SOS","After Breakfast","After Defecation","After Dinner","After Lunch","After Meals","At Bed Time","Before Breakfast","Before Dinner","Before Lunch","Before Meals","In Between Food","On Empty Stomach","With Hot Water","With Milk","With Warm Water","With Water"],e.days=["Mon","Tue","Wed","Thur","Fri","Sat","Sun"],e.times=["Morning","Afternoon","Night"],e.favorites=["Crocin","Glycomed","Disprin","Combiflam","Asprin","Zandu Bam","Digene"],e.dosages=["N/A","0 - 0 - 1","0 - 0 - 2","0 - 0 - 3","0 - 1 - 0","0 - 1 - 1","0 - 2 - 2","0 - 3 - 3","1 - 0 - 0","1 - 0 - 1","1 - 1 - 0","1 - 1 - 1","1 - 1 - 1 - 1","2 - 0 - 2","2 - 2 - 0","2 - 2 - 2","2 - 2 - 2 - 2","3 - 0 - 0","3 - 0 - 3","3 - 3 - 0","3 - 3 - 3","3 - 3 - 3 - 3"],e.advises=["Absolute Eosinophil Count","ACTH Stimulation Test","Alpha Fetoprotien (Adult)","Amlicor MTB Test","Anti-LA Antibody","Anti-Double Stranded DNA AntiBody"],e["delete"]=a,e.add=s,e.search=r,e.flag=1,e.days=["Mon","Tue","Wed","Thur","Fri","Sat","Sun"],e.times=["Morning","Afternoon","Night"];var c=e.$watch("type",function(t){if(console.log("Item str: "+t),!_.isUndefined(t)){var i="prescription."+t+"s",n=e.$watch(i,function(e,t){if(void 0!==e&&void 0!==t){var i=e.length,r=t.length;if(i==r-1&&0==Object.keys(t[r-1]).length)return void n();Object.keys(e[i-1]).length>1&&s()}},!0);c()}})}angular.module("ERemediumWebApp.prescriptions.controllers").controller("PrescriptionItemsCtrl",e),e.$inject=["$scope","Prescription","Account","$state"]}(),function(){"use strict";function e(e,t,i,n,s,r){function a(){m||(m=!0,d.limit+=u*p,e.myPromise=i.list(d,function(t){e.prescriptions=t,m=!1}).$promise,u++)}function o(t){e.prescriptions.splice(t,1)}if(!n.isAuthenticated())return void s.go("login",{signIn:!0});var c=n.getAuthenticatedAccount(),l=t.patientId;e.$parent.detailView=null,e.prescriptions=e.$parent.prescriptions,e.detail=function(e){s.go("PrescriptionIndex.Detail",{prescriptionId:e})},e.canvasEnabled=c.loggedInUser.settings.canvasEnabled,e.sortSearchResultsReverse=!1,e.sortSearchResultsType="",e.doctorName=r.getFullName(c.loggedInUser);var d={user:c.loggedInUser.mobile,sessionId:c.sessionId,doctorId:c.userId,patientId:l,columnsToGet:"pid,creationDate,patientComplaint,diagnosis,medcines,advises",limit:15};e["delete"]=o,e.load=a;var u=0,p=15,m=!1;a()}angular.module("ERemediumWebApp.prescriptions.controllers").controller("PrescriptionListCtrl",e),e.$inject=["$scope","$stateParams","Prescription","Account","$state","$rootScope"]}(),function(){"use strict";function e(e,t,i,n){return i.isAuthenticated()?(e.account=i.getAuthenticatedAccount(),void(e.patientId=t.patientId)):void n.go("login",{signIn:!0})}angular.module("ERemediumWebApp.prescriptions.controllers").controller("PrescriptionOrderStatusCtrl",e),e.$inject=["$scope","$stateParams","Account","$state"]}(),function(){"use strict";function e(e,t,i,n,s){function r(){a(),o(),c()}function a(){var t={user:u.loggedInUser.mobile,sessionId:u.sessionId,pid:i.prescriptionId,columnsToGet:""};e.prescription=n.get(t),e.myPromise=e.prescription.$promise,e.prescription.$promise.then(function(t){angular.isUndefined(e.prescription.patient.alternateAddresses)&&(e.prescription.patient.alternateAddresses=[]),e.addresses=e.prescription.patient.alternateAddresses,e.addresses.push(e.prescription.patient.address),e.order.address=e.prescription.patient.address})}function o(){n.listPharma({user:u.userId,sessionId:u.sessionId,city:u.loggedInUser.clinic.city,limit:10,columnsToGet:""},function(t){e.pharmacies=t})}function c(){n.listLabs({user:u.userId,sessionId:u.sessionId,city:u.loggedInUser.clinic.city,limit:10,columnsToGet:""},function(t){e.labs=t})}function l(){var s={user:u.userId,sessionId:u.sessionId,doctorId:u.userId,pid:i.prescriptionId,pharmaId:e.order.pharmacy.pharmaId,deliveryAddress:{addressLine1:e.order.address.addressLine1,addressLine2:e.order.address.addressLine2,city:e.order.address.city,state:e.order.address.state,pincode:e.order.address.pincode}};e.myPromise=n.placeOrder(s,function(n){e.showAlert=!0,angular.isUndefined(n)?(e.alertMessage="Error in placing Order, Please try again!",e.alertClass="alert-danger"):1==n.respCode?t.go("PrescriptionOrderStatus",{patientId:i.patientId,prescriptionId:i.prescriptionId}):(e.alertMessage=n.response,e.alertClass="alert-danger")})}function d(){t.go("PatientNewOrEdit",{patientId:i.patientId})}if(!s.isAuthenticated())return void t.go("login",{signIn:!0});var u=s.getAuthenticatedAccount();r(),e.order=l,e.close=d}angular.module("ERemediumWebApp.prescriptions.controllers").controller("PrescriptionOrderCtrl",e),e.$inject=["$scope","$state","$stateParams","Prescription","Account"]}(),function(){"use strict";function e(e,t,i,n,s){function r(){e[l]=e.$parent[l],"medcine"===l&&(e.medcine.frequency=e.medcine.frequency||{},e.medcine.frequency.freq=e.medcine.frequency.freq||e.frequencies[0],e.medcine.frequency.dType=e.medcine.frequency.dType||e.dosageUnits[0])}function a(t){var i={user:c.loggedInUser.mobile,sessionId:c.sessionId,doctorId:c.userId,searchText:t,limit:5,columnsToGet:""};return e.myPromise=n.searchMed(i).$promise,n.searchMed(i).$promise}function o(){e.$parent.prescription[d].push(e[l]),e.$parent[l]={},r()}if(!s.isAuthenticated())return void i.go("login",{signIn:!0});var c=s.getAuthenticatedAccount();e.frequencies=["Daily","Weekly","Monthly","Custom"],e.dispenseUnits=["Tablet","Bottle","Injection"],e.dosageUnits=["tablet","ml","mg"],e.instructions=["After Breakfast","After Defecation","After Dinner","After Lunch","After Meals","At Bed Time","Before Breakfast","Before Dinner","Before Lunch","Before Meals","In Between Food","On Empty Stomach","With Hot Water","With Milk","With Warm Water","With Water"],e.days=["Mon","Tue","Wed","Thur","Fri","Sat","Sun"],e.times=["Morning","Afternoon","Night"],e.favorites=["Crocin","Glycomed","Disprin","Combiflam","Asprin","Zandu Bam","Digene"],e.advises=["Absolute Eosinophil Count","ACTH Stimulation Test","Alpha Fetoprotien (Adult)","Amlicor MTB Test","Anti-LA Antibody","Anti-Double Stranded DNA AntiBody"];var l=e.$parent.itemStr,d=e.$parent.itemsStr;e.saveBtnName=_.isEmpty(e[l])?"Add":"Update",e.dialogTitle=e.saveBtnName+" "+("medcine"===l?"Medicine":"Advise"),r(),e.search=a,e.next=o}angular.module("ERemediumWebApp.prescriptions.controllers").controller("PrescriptionUpsertItemCtrl",e),e.$inject=["$scope","$stateParams","$state","Prescription","Account"]}(),function(){"use strict";function e(e){function t(e,t,i){e.editable=!1,i.editable&&(e.editable=!0),e.type=i.type}var i={link:t,restrict:"E",templateUrl:function(e,t){return"Prescriptions/partials/prescriptions."+t.type+"s.html"},controller:"PrescriptionItemsCtrl",scope:{prescription:"=prescription"}};return i}angular.module("ERemediumWebApp.prescriptions.directives").directive("items",e),e.$inject=["$rootScope"]}(),function(){"use strict";function e(e){function t(e,t,i){}var i={link:t,restrict:"E",transclude:!0,templateUrl:function(e,t){return"Prescriptions/partials/prescriptions."+t.type+".html"}};return i}angular.module("ERemediumWebApp.prescriptions.directives").directive("navbar",e),e.$inject=["$rootScope"]}(),function(){"use strict";angular.module("ERemediumWebApp.prescriptions.services").factory("Prescription",["$resource",function(e){var t="",i={},n={upsert:{method:"POST",url:"http://52.76.165.4/ERService/prescription/UpsertPrescription"},list:{method:"POST",url:"http://52.76.165.4/ERService/prescription/ListPrescription",isArray:!0},get:{method:"POST",url:"http://52.76.165.4/ERService/prescription/GetPrescription"},query:{method:"GET",url:"http://52.76.165.4/ERService/prescription/SearchPrescription"},searchMed:{method:"POST",url:"http://52.76.165.4/ERService/medcineservice/MedAutocomplete",isArray:!0},listPharma:{method:"POST",url:"http://52.76.165.4/ERService/pharmaservice/ListPharma",isArray:!0},listLabs:{method:"POST",url:"http://52.76.165.4/ERService/pharmaservice/ListPharma",isArray:!0},placeOrder:{method:"POST",url:"http://52.76.165.4/ERService/orderservice/Order",isArray:!1},getTemplates:{method:"POST",url:"http://52.76.165.4/ERService/prescription/ListTemplate",isArray:!0},getTemplateById:{method:"POST",url:"http://52.76.165.4/ERService/prescription/GetTemplateById",isArray:!1},getFavouriteMed:{method:"POST",url:"http://52.76.165.4/ERService/medcineservice/GetFavouriteMed",isArray:!0}};return e(t,i,n)}])}(),function(){"use strict";function e(e,t,i,n,s,r){function a(){n.pageHeader="Reporting & Analytics"}return s.isAuthenticated()?(e.account=s.getAuthenticatedAccount(),void a()):void i.go("login",{signIn:!0})}angular.module("ERemediumWebApp.reportinganalytics.controllers").controller("ReportingAnalyticsIndexCtrl",e),e.$inject=["$scope","ReportingAnalytics","$state","$rootScope","Account","$stateParams"]}(),function(){"use strict";angular.module("ERemediumWebApp.reportinganalytics.services").factory("ReportingAnalytics",["$resource",function(e){var t="",i={},n={upsert:{method:"POST",url:"http://52.76.165.4/ERService/userservice/UpsertUser"}};return e(t,i,n)}])}(),function(){"use strict";function e(e,t,i,n,s){function r(){n.pageHeader="Tasks",e.buttonText=function(e){return"Refill Request"==e?"Go to Prescription":"Lab Results"==e?"View Lab Results":"Take Action"},a()}function a(){var t={};t.type="Refill Request",t.dateadded="30/04/2016",t.status="Pending",t.patient={},t.patient.patientId="169080020875355",t.patient.mobile=9910430979,t.patient.patientName="Aryan Singh";var i={};i.type="Lab Results",i.dateadded="27/04/2016",i.status="Pending",i.patient={},i.patient.patientId="764505141092893",i.patient.mobile=9234567890,i.patient.patientName="Rohit Singh Saini";var n={};n.type="Lab Results",n.dateadded="26/04/2016",n.status="Pending",n.patient={},n.patient.patientId="726284709754468",n.patient.mobile=9234567890,n.patient.patientName="Vishwajeet Saini Sr.";var s={};s.type="Refill Request",s.dateadded="24/04/2016",s.status="Pending",s.patient={},s.patient.patientId="8014201593870209",s.patient.mobile=9910456723,s.patient.patientName="Ashutosh Bhatia";var r={};r.type="Refill Request",r.dateadded="10/04/2016",r.status="Rejected",r.patient={},r.patient.patientId="8732237602918102",r.patient.mobile=9876543334,r.patient.patientName="Pahul Jain";var a={};a.type="Refill Request",a.dateadded="02/04/2016",a.status="Approved",a.patient={},a.patient.patientId="168623978562710",a.patient.mobile=9818647551,a.patient.patientName="Sujit Chaudhary";var o={};o.type="Lab Results",o.dateadded="01/04/2016",o.status="Viewed",o.patient={},o.patient.patientId="8729179790399743",o.patient.mobile=9717271217,o.patient.patientName="Rohan Gupta",e.taskList=[t,i,n,s,r,a,o]}return s.isAuthenticated()?(e.account=s.getAuthenticatedAccount(),void r()):void i.go("login",{signIn:!0})}angular.module("ERemediumWebApp.tasks.controllers").controller("TasksListCtrl",e),e.$inject=["$scope","Task","$state","$rootScope","Account"]}(),function(){"use strict";angular.module("ERemediumWebApp.tasks.services").factory("Task",["$resource",function(e){var t="",i={},n={upsert:{method:"POST",url:"http://52.76.165.4/ERService/userservice/UpsertUser"},get:{method:"POST",url:"http://52.76.165.4/ERService/userservice/GetUserById",isArray:!1},query:{method:"POST",url:"http://52.76.165.4/ERService/userservice/GetUsersForDoctor",isArray:!0}};return e(t,i,n)}])}(),function(){"use strict";function e(){return{compile:function(e,t,i){return t.ngClick="!("+t.aDisabled+") && ("+t.ngClick+")",function(e,t,i){e.$watch(i.aDisabled,function(e){void 0!==e&&t.toggleClass("disabled",e)}),t.on("click",function(t){e.$eval(i.aDisabled)&&t.preventDefault()})}}}}angular.module("ERemediumWebApp.utils.directives").directive("aDisabled",e)}(),function(){"use strict";function e(e){function t(e,t,i){var n={useCurrent:!1},s=t.find(".date");e.$watch("ngModel",function(e){_.isEmpty(s.data("DateTimePicker"))?s.datetimepicker(n):_.isEmpty(e)||s.data("DateTimePicker").date(new Date(e))}),t.find("input").attr("placeholder",i.placeholder),t.find("input").attr("ng-change",i.ngChange),t.bind("dp.change",function(t){e.ngModel=t.date})}var i={link:t,restrict:"E",templateUrl:"Utils/partials/datetimepicker.html",scope:{ngModel:"="}};return i}angular.module("ERemediumWebApp.utils.directives").directive("datetimepicker",e),e.$inject=["$rootScope"]}(),function(){"use strict";function e(){function e(e,t,i){var n=!!("ontouchstart"in window),s=n?"touchstart":"mousedown",r=n?"touchmove":"mousemove",a=n?"touchend":"mouseup",o=i.options||{},c=document.createElement("canvas");c.id=o.canvasId,c.setAttribute("resize","");var l=document.createElement("canvas");l.id=o.tmpCanvasId,l.setAttribute("resize",""),angular.element(l).css({position:"absolute",top:0,left:0}),t.find("div").append(c),
t.find("div").append(l);var d=c.getContext("2d"),u=(l.getContext("2d"),{x:0,y:0});paper.remove(),paper.setup(l),c.width=l.width,c.height=l.height;var p,m=function(e){var t=0,i=0;do isNaN(e.offsetLeft)||(t+=e.offsetTop,i+=e.offsetLeft),e=e.offsetParent;while(e);return{left:i,top:t}},g=function(e,t){n?(e.x=t.changedTouches[0].pageX-m(t.target).left,e.y=t.changedTouches[0].pageY-m(t.target).top):(e.x=void 0!==t.offsetX?t.offsetX:t.layerX,e.y=void 0!==t.offsetY?t.offsetY:t.layerY)},f=function(e){var t,i=new paper.Point(u.x,u.y);if(e){if(e.preventDefault(),g(u,e),t=new paper.Point(u.x,u.y),i.equals(t))return;var n=t.subtract(i),s=n.divide(2),r=2,a=(r/s.length,s.length),o=1,c=o*(2*a/45);s=s.multiply((r-c)/a),s.angle+=90;var l=i.add(t).divide(2),d=l.add(s),m=l.subtract(s);p.add(d),p.insert(0,m),p.smooth()}},h=function(e){g(u,e),p.add(u),p.closed=!0,l.removeEventListener(r,f,!1),d.drawImage(l,0,0),paper.project.clear()},v=function(e){e.preventDefault(),l.addEventListener(r,f,!1),g(u,e),p=new paper.Path,p.fillColor="black",p.fillCap="round",p.add(u),f()},I=function(){function t(){d=!0}function i(){d=!1}function r(){document.body.removeEventListener("mousedown",t),document.body.removeEventListener("mouseup",i)}function o(e){d&&v(e)}function c(e){d&&h(e)}if(l.addEventListener(s,v,!1),l.addEventListener(a,h,!1),!n){var d;document.body.addEventListener("mousedown",t),document.body.addEventListener("mouseup",i),e.$on("$destroy",r),l.addEventListener("mouseenter",o),l.addEventListener("mouseleave",c)}},P=function(){function t(){n.scrollTop=s}function i(){if(!_.isEmpty(e.ngModel)){var t=document.createElement("img");t.src=e.ngModel,d.clearRect(0,0,c.width,c.height),d.drawImage(t,0,0)}}var n=$("body").get(0),s=n.scrollTop;n.scrollTop=0,e.$on("$destroy",t),i(),I()};P()}var t={link:e,restrict:"AE",scope:{ngModel:"="},template:'<div class="myCanvasPaint" style="position:relative"></div>'};return t}function t(e){function t(t,i,n){var s=i;i.on("touchstart touchmove",function(e){e.preventDefault()});var r=50;e.$on("canvas.write",function(e,t){var i=$(window).height(),n=i-s.height();if(50>n-t){var a=i-(t+r);s.height(a)}})}return{link:t,restrict:"AE"}}angular.module("ERemediumWebApp.utils.directives").directive("myCanvas",e),e.$inject=[],angular.module("ERemediumWebApp.utils.directives").directive("palmReject",t),t.$inject=["$rootScope"]}(),function(e){"use strict";function t(){function e(e,n,s){n.on("click",function(){var e=document.getElementById(s.printElementId);e&&(t(e),window.print())}),window.onafterprint=function(){i.innerHTML=""}}function t(e){i.innerHTML="";var t=e.cloneNode(!0);i.appendChild(t)}var i=document.getElementById("printSection");return i||(i=document.createElement("div"),i.id="printSection",document.body.appendChild(i)),{link:e,restrict:"A"}}e.module("ERemediumWebApp.utils.directives").directive("ngPrint",t)}(window.angular),function(){"use strict";function e(e){return{restrict:"A",controller:function(e){e.spies=[],this.addSpy=function(t){e.spies.push(t)}},link:function(t,i,n){var s;s=[],t.$watch("spies",function(e){var t,n,r,a;for(a=[],n=0,r=e.length;r>n;n++)t=e[n],null==s[t.id]&&a.push(s[t.id]=i.find("#"+t.id));return a}),$(e).scroll(function(){var i,n,r,a,o,c;for(i=null,c=t.spies,a=0,o=c.length;o>a;a++)r=c[a],r.out(),void 0!==s[r.id].offset()&&(n=s[r.id].offset().top)-e.scrollY<=0&&(r.pos=n,null==i&&(i=r),i.pos<r.pos&&(i=r));return $(window).scrollTop()+$(window).height()>=$(document).height()&&(r.pos=n,i=r),null!=i?i["in"]():void 0})}}}angular.module("ERemediumWebApp.utils.directives").directive("scrollSpy",e),e.$inject=["$window"]}(),function(){"use strict";function e(e,t){return{restrict:"A",require:"^scrollSpy",link:function(i,n,s,r){n.click(function(){e.hash(s.spy),t()}),r.addSpy({id:s.spy,"in":function(){n.addClass("active")},out:function(){n.removeClass("active")}})}}}angular.module("ERemediumWebApp.utils.directives").directive("spy",e),e.$inject=["$location","$anchorScroll"]}(),function(){"use strict";function e(e){return{require:"ngModel",link:function(e,t,i,n){n.$parsers.push(function(e){return""+e}),n.$formatters.push(function(e){return parseFloat(e,10)})}}}angular.module("ERemediumWebApp.utils.directives").directive("stringToNumber",e),e.$inject=["$rootScope"]}(),function(){"use strict";function e(){this.x=void 0,this.y=void 0}function t(t){function i(i,n,s){var r=n.get(0),a=i.ngModel,i=i,o={backgroundColor:Module.Color.WHITE,color:Module.Color.BLACK,init:function(e,t,i){this.isTouch=!!("ontouchstart"in window),this.canvasEl=i,this.initInkEngine(e,t),this.initEvents(),_.isEmpty(a)||this.loadImage(a)},initInkEngine:function(e,t){this.canvas=new Module.InkCanvas(this.canvasEl,e,t),this.canvas.clear(this.backgroundColor),this.brush=new Module.DirectBrush,this.speedPathBuilder=new Module.SpeedPathBuilder,this.speedPathBuilder.setNormalizationConfig(182,3547),this.speedPathBuilder.setPropertyConfig(Module.PropertyName.Width,.5,1.2,NaN,NaN,Module.PropertyFunction.Sigmoid,.6,!0),window.PointerEvent?(this.pressurePathBuilder=new Module.PressurePathBuilder,this.pressurePathBuilder.setNormalizationConfig(.195,.88),this.pressurePathBuilder.setPropertyConfig(Module.PropertyName.Width,2.05,34.53,.72,NaN,Module.PropertyFunction.Power,1.19,!1),this.smoothener=new Module.MultiChannelSmoothener(this.pressurePathBuilder.stride)):this.smoothener=new Module.MultiChannelSmoothener(this.speedPathBuilder.stride),this.strokeRenderer=new Module.StrokeRenderer(this.canvas,this.canvas),this.strokeRenderer.configure({brush:this.brush,color:this.color})},initEvents:function(){var e=this;window.PointerEvent?(Module.canvas.addEventListener("pointerdown",function(t){e.beginStroke(t)}),Module.canvas.addEventListener("pointermove",function(t){e.moveStroke(t)}),document.addEventListener("pointerup",function(t){e.endStroke(t)})):(Module.canvas.addEventListener("mousedown",function(t){e.beginStroke(t)}),Module.canvas.addEventListener("mousemove",function(t){e.moveStroke(t)}),document.addEventListener("mouseup",function(t){e.endStroke(t)}),window.TouchEvent&&(Module.canvas.addEventListener("touchstart",function(t){e.beginStroke(t)}),Module.canvas.addEventListener("touchmove",function(t){e.moveStroke(t)}),document.addEventListener("touchend",function(t){e.endStroke(t)})))},getOffset:function(e){var t=0,i=0;do isNaN(e.offsetLeft)||(t+=e.offsetTop,i+=e.offsetLeft),e=e.offsetParent;while(e);return{left:i,top:t}},setPointFromEvent:function(e,i){window.PointerEvent&&i instanceof PointerEvent&&(console.re.log("Pointer events supported!"),i=i.originalEvent);var n;if(this.isTouch){if(i.changedTouches[0].target.id!==this.canvasEl.id)return!1;e.x=i.changedTouches[0].pageX-this.getOffset(i.target).left,e.y=i.changedTouches[0].pageY-this.getOffset(i.target).top,n=i.changedTouches[0].clientY}else e.x=void 0!==i.offsetX?i.offsetX:i.layerX,e.y=void 0!==i.offsetY?i.offsetY:i.layerY,n=i.clientY;return t.$emit("canvas.write",n),!0},getPressure:function(e){return window.PointerEvent&&e instanceof PointerEvent&&.5!==e.pressure?e.pressure:NaN},beginStroke:function(t){var i=new e;this.setPointFromEvent(i,t),i.isValid()&&(t.preventDefault(),this.inputPhase=Module.InputPhase.Begin,this.pressure=this.getPressure(t),this.pathBuilder=isNaN(this.pressure)?this.speedPathBuilder:this.pressurePathBuilder,this.buildPath(i),this.drawPath())},moveStroke:function(t){if(this.inputPhase){var i=new e;if(this.setPointFromEvent(i,t),i.isValid()&&(t.preventDefault(),this.inputPhase=Module.InputPhase.Move,this.pointerPos=i,this.pressure=this.getPressure(t),o.frameID!=o.canvas.frameID)){var n=this;o.frameID=o.canvas.requestAnimationFrame(function(){n.inputPhase&&n.inputPhase==Module.InputPhase.Move&&(n.buildPath(n.pointerPos),n.drawPath())},!0)}}},endStroke:function(t){if(this.inputPhase){var i=new e;this.setPointFromEvent(i,t),i.isValid()&&(t.preventDefault(),this.inputPhase=Module.InputPhase.End,this.pressure=this.getPressure(t),this.buildPath(i),this.drawPath(),delete this.inputPhase)}},buildPath:function(e){this.inputPhase==Module.InputPhase.Begin&&this.smoothener.reset();var t=isNaN(this.pressure)?Date.now()/1e3:this.pressure,i=this.pathBuilder.addPoint(this.inputPhase,e,t),n=this.smoothener.smooth(i,this.inputPhase==Module.InputPhase.End),s=this.pathBuilder.addPathPart(n);this.pathPart=s.getPathPart()},drawPath:function(){this.strokeRenderer.draw(this.pathPart,this.inputPhase==Module.InputPhase.End)},clear:function(){this.canvas.clear(this.backgroundColor)},saveImage:function(){var e=this.canvas.width,t=this.canvas.height,i=this.canvas.readPixels(this.canvas.bounds),n=document.createElement("canvas");n.width=e,n.height=t;var s=n.getContext("2d"),r=s.createImageData(e,t);return r.data.set(i),s.putImageData(r,0,0),n.toDataURL()},loadImage:function(e){var t=this.canvas.width,i=this.canvas.height,n=document.createElement("img");n.src=e;var s=document.createElement("canvas");s.width=t,s.height=i;var r=s.getContext("2d");r.clearRect(0,0,this.canvas.width,this.canvas.height),r.drawImage(n,0,0);var a=r.getImageData(0,0,t,i);this.canvas.writePixels(a.data,this.canvas.bounds)}};Module.InkDecoder.getStrokeBrush=function(e){return o.brush};var c=r.parentElement.offsetHeight;i.fullScreen&&(c=window.innerHeight-r.offsetTop),o.init(r.parentElement.offsetWidth,c,r),_.bindAll(o,"saveImage","loadImage"),i.setFn({saveImage:o.saveImage,loadImage:o.loadImage})}var n={link:i,restrict:"AE",scope:{setFn:"&",ngModel:"=",fullScreen:"="}};return n}angular.module("ERemediumWebApp.utils.directives").directive("willCanvas",t),t.$inject=["$rootScope"],e.prototype.isValid=function(){return!(void 0==this.x&&void 0==this.y)}}(),function(){function e(e){return function(t,i,n){if(angular.isDefined(t)){var s=new Date(t);return e("date")(s,i,n)}}}angular.module("ERemediumWebApp.utils.filters").filter("datetime",e),e.$inject=["$filter"]}();